- hosts: all
  gather_facts: false
  tasks:
  - name: Install chrony
    become: true
    ansible.builtin.dnf:
     name: "{{ packages }}"
    vars:
     packages:
     - chrony
    async: 450
    poll: 5
  
  - name: Start service httpd, if not started
    become: true
    ansible.builtin.service:
      name: chrony
      state: started
  
   
  - name: install common components
    become: true
    shell: "{{item}}" 
    with_items:
    #- "systemctl enable chronyd"
    - "dnf update -y"
    
  - name: Set timezone to Europe/Madrid
    become: true
    community.general.timezone:
      name: Europe/Madrid
    async: 10
    poll: 2

  
  
  #- name: Enable Chrony service
  #  become: true
  #  ansible.builtin.systemd:
  #    name: chrony
  #    enabled: yes
  #  async: 10
  #  poll: 2

  #- name: Ensure Chrony service is running
  #  become: true
  #  ansible.builtin.systemd:
  #    name: chrony
  #    state: started
  #  async: 10
  #  poll: 2


     
   
  - name: Unconditionally reboot the machine with all defaults
    reboot:
     
  
  - name: actualizamos máquinas al último nivel
    become: true
    command: dnf update -y

  - name: sincronización horaria
    become: true
    command: timedatectl set-timezone Europe/Madrid
  
  - name: enable chronyd
    become: true
    command: systemctl enable chronyd
    
  - name: arrancar chronyd
    become: true
    command: systemctl start chronyd

  - name: timedatectl set-ntp
    become: true
    command: timedatectl set-ntp true
  
  - name: SELinux estuviera activado lo desativamos
    become: true
    command: sed -i s/=enforcing/=disabled/g /etc/selinux/config
  
  - name: instalación de paquetes necesarios
    become: true
    command: dnf install nfs-utils nfs4-acl-tools wget -y
    
  - name: firewall, modprobe
    become: true
    command: "{{item}}" 
    with_items:
    # firewall y cortafuegos
    - systemctl enable firewalld
    - systemctl start firewalld
    - modprobe br_netfilter
    - firewall-cmd --add-masquerade --permanent
    - firewall-cmd --reload
    
  - name: tráfico de cortafuegos
    become: true
    ansible.builtin.lineinfile:
      path: /etc/sysctl.d/k8s.conf
      backup: yes
      line: "{{item}}"
      create: yes
      state: present
    with_items:
    - net.bridge.bridge-nf-call-ip6tables = 1
    - net.bridge.bridge-nf-call-iptables = 1
    async: 10
    poll: 2
  
  - name: aplicar cambios
    become: true
    command: sysctl --system
  
  - name: desactivar swap
    become: true
    command: swapoff -a
    
  - name: borrar linea swap en fstab
    become: true
    ansible.builtin.lineinfile:
      path: /etc/fstab
      # String to Search
      regexp: "swap" 
      # State is set to Absent to remove if the Searching Line is found
      state: absent
      backup: yes
  
   
  
  
  
