# instalamos paquetes comunes
- name: Install common packages
  become: true
  ansible.builtin.dnf:
   name: "{{item}}"
   state: latest    
  with_items:
   - python3
   - chrony
   - nfs-utils
   - nfs4-acl-tools
   - wget
   - python3-pip
   - ca-certificates
     
# instalo openshift y PyYAML 
- name: Install pip packages
  become: true
  ansible.builtin.pip:
   name: "{{item}}"
   state: latest    
  with_items:
   - openshift
   - pyyaml
     
# actualizamos repositorio dnf
- name: Update dnf repository
  become: true
  ansible.builtin.dnf:
    update_only: yes 
    update_cache: yes
    state: latest
     
- name: Enable Chrony service
  become: true
  ansible.builtin.systemd:  
    name: chronyd
    enabled: yes

- name: Started Chrony service
  become: true
  ansible.builtin.systemd:
    name: chronyd
    state: started

# activamos y arrancamos servicio chrony
#- name: Enable and started Chrony service
#  become: true
#  ansible.builtin.systemd:
#    name: chronyd
#    enabled: yes
#    state: restarted
    
         
# seteamos el timezone a Europa/Madrid
- name: Set timezone to Europe/Madrid
  become: true
  community.general.timezone:
    name: Europe/Madrid
      
- name: timedatectl set-ntp
  become: true
  command: timedatectl set-ntp true

- name: SELinux estuviera activado lo desativamos
  become: true
  command: sed -i s/=enforcing/=disabled/g /etc/selinux/config
   
- name: Reboot host and wait for it to restart
  reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 600
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: whoami

# activamos y arrancamos servicio firewall
- name: Enable and started firewalld
  become: true
  ansible.builtin.systemd:
    name: firewalld
    enabled: yes
    state: started
    daemon_reload: true
   
# modprobe module
- name: br_netfilter add
  become: true
  community.general.modprobe:
    name: br_netfilter
    state: present
  async: 10
  poll: 2
    
# volvemos a cargar firewall
- name: firewall
  become: true
  shell: "{{item}}" 
  with_items:
   - firewall-cmd --add-masquerade --permanent
   - firewall-cmd --reload
 
- name: tr√°fico de cortafuegos
  become: true
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/k8s.conf
    backup: yes
    line: "{{item}}"
    create: yes
    state: present
  with_items:
    - net.bridge.bridge-nf-call-ip6tables = 1
    - net.bridge.bridge-nf-call-iptables = 1
  async: 10
  poll: 2
  
- name: aplicar cambios
  become: true
  command: sysctl --system

- name: desactivar swap
  become: true
  shell: swapoff -a
    
- name: borrar linea swap en fstab
  become: true
  ansible.builtin.lineinfile:
    path: /etc/fstab
    # String to Search
    regexp: "swap" 
    # State is set to Absent to remove if the Searching Line is found
    state: absent
    backup: yes
 
  
