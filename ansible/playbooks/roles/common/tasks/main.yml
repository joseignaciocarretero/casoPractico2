## Rol para tareas comunes ##

# instalamos paquetes comunes
- name: Install common packages
  become: true
  ansible.builtin.dnf:
   name: "{{item}}"
   state: latest    
  with_items:
   - python3
   - chrony
   - nfs-utils
   - nfs4-acl-tools
   - wget
   - python3-pip
   - ca-certificates
     
# instalo openshift y PyYAML 
- name: Install pip packages
  become: true
  ansible.builtin.pip:
   name: "{{item}}"
   state: latest    
  with_items:
   - openshift
   - pyyaml
     
# actualizamos repositorio dnf
- name: Update dnf repository
  become: true
  ansible.builtin.dnf:
    update_only: yes 
    update_cache: yes
    state: latest
     
# activamos chrony
- name: Enable Chrony service
  become: true
  ansible.builtin.systemd:  
    name: chronyd
    enabled: yes

# arrancamos chrony
- name: Started Chrony service
  become: true
  command: systemctl start chronyd
        
# seteamos el timezone a Europa/Madrid
- name: Set timezone to Europe/Madrid
  become: true
  community.general.timezone:
    name: Europe/Madrid
      
- name: timedatectl set-ntp
  become: true
  command: timedatectl set-ntp true

# SELinux desactivamos
- name: SELinux disable
  become: true
  command: sed -i s/=enforcing/=disabled/g /etc/selinux/config

# reiniciamos nodo y esperamos con whoami a que la máquina esté lista
- name: Reboot 
  become: true
  reboot:
    reboot_timeout: 3600
    test_command: whoami
    
# activamos y arrancamos servicio firewall
- name: Enable and started firewalld
  become: true
  ansible.builtin.systemd:
    name: firewalld
    enabled: yes
    
# arrancamos servicio firewall   
- name: Enable and started firewalld
  become: true
  command: systemctl start firewalld
      
# modprobe module
- name: br_netfilter add
  become: true
  community.general.modprobe:
    name: br_netfilter
    state: present
  async: 10
  poll: 2

# añade masquerade firewall
- name: firewall
  become: true
  ansible.posix.firewalld:
    masquerade: yes
    state: enabled
    permanent: yes
    zone: dmz

# recargamos firewall
- name: reload firewall  
  become: true
  shell: firewall-cmd --reload
  
# tráfico de cortafuegos 
- name: bridge config
  become: true
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/k8s.conf
    backup: yes
    line: "{{item}}"
    create: yes
    state: present
  with_items:
    - net.bridge.bridge-nf-call-ip6tables = 1
    - net.bridge.bridge-nf-call-iptables = 1
  async: 10
  poll: 2

# aplicar cambios
- name: apply changes
  become: true
  command: sysctl --system

# desactivamos swap
- name: deactivate swap
  become: true
  shell: swapoff -a
    
# borramos del fichero fstab el swap    
- name: delete swap line in fstab
  become: true
  ansible.builtin.lineinfile:
    path: /etc/fstab
    # String to Search
    regexp: "swap" 
    # State is set to Absent to remove if the Searching Line is found
    state: absent
    backup: yes
 
  
