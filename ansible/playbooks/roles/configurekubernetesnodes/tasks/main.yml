## Rol para la configuración de kubernetes, en este caso para los workers ##

# abrimos puertos firewall
- name: open ports
  become: true  
  ansible.posix.firewalld: 
    zone: public
    permanent: yes
    port: "{{item}}"
    state: enabled
  loop:
   - 10250/tcp
   - 10255/tcp
   - 8285/udp
   - 8472/udp
   - 30000-32767/tcp

# añade masquerade firewall
- name: firewall
  become: true
  ansible.posix.firewalld:
    masquerade: yes
    state: enabled
    permanent: yes

# volvemos a cargar el firewall 
- name: reload firewall
  become: true  
  shell: "firewall-cmd --reload" 

# borrar si es necesari
# ejecutamos el valor que hemos registrado del join command de master en los workers 
# activamos ignore_errors, si el join ya se hubiera hecho que continúe la ejecución
- name: save jinja join command execution
  become: true
  template:
    src: joinTemplate.j2
    dest: ./executeJoin.sh  

- name: execute join
  become: true
  shell: ./executeJoin.sh
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"

#- name: delete join
#  become: true
#  file: ./executeJoin.sh
#    state: absent
    
# mostramos que la variable guardada en el master la veo desde el worker
#- name: debug token
#  become: true
#  debug: msg = "{{hostvars['mastercp2.westeurope.cloudapp.azure.com']['token_join'].stdout}}"
  
     
# ejecutamos el valor que hemos registrado del join command de master en los workers 
# activamos ignore_errors, si el join ya se hubiera hecho que continúe la ejecución
#- name: execute join
#  become: true  
#  command: "{{hostvars['mastercp2.westeurope.cloudapp.azure.com']['token_join'].stdout}}"     
#  ignore_errors: yes
